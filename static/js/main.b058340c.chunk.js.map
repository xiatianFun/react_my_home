{"version":3,"sources":["commponents/SwitchTransition/index.js","pages/Home/components/Header.js","pages/Home/components/HomeTitle.js","pages/Home/components/HomeContent.js","pages/Home/components/ArticleList.js","pages/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["SwitchTransition","boxnum","list","i","push","active","state","dom","n","arr","Array","newArr","length","Math","floor","random","splice","console","log","order","this","shuffle","newDom","setAnimate","setInterval","setState","props","setCallback","setTimeout","animateEnd","clearInterval","clearTimeout","classNames","animate","type","className","map","k","Component","Header","HomeTitle","setTimeout0","setTimeout1","setTimeout2","setTimeout3","useState","animate1","setAnimate1","animate2","setAnimate2","animate3","setAnimate3","cursor","setCursor","useEffect","style","fontSize","HomeContent","ArticleList","color","Home","switchShow","setSwitchShow","height","defaultIndex","Item","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b058340c.chunk.js","sourcesContent":["import {Component, useState, useEffect} from 'react';\n\n/**\n * @name 过场动画组件\n * @props.type 选择进入动画还是离开动画 :String\n * @props.callback 动画完毕时回调函数 :Function\n */\n\n\n\n// const shuffle = (n) => {\n//     //生成m张牌\n//     let arr = new Array(n);\n//     for (var i = 0; i < n; i++) {\n//         arr[i] = i;\n//     }\n//     //每次抽出一张牌，放在另一堆。因为要在数组里抽出元素，把后面的所有元素向前拉一位，所以很耗时。\n//     var newArr = []\n//     for (let i = n; i > 0; i--) {\n//         var length = Math.floor(Math.random() * i);\n//         newArr.push(arr[length]);\n//         arr.splice(length, 1);\n//     }\n//     console.log(newArr)\n//     return newArr;\n// }\n\n\n// const SwitchTransition = ({type}) => {\n//     let interval1;\n//     let list = []\n//     for (let i = 0; i < 16; i++) {\n//         list.push({active: false})\n//     }\n//     const [domList, setDomList] = useState(list)\n//     useEffect(() => {\n//         let newDom = domList;\n//         let order = shuffle(16) //组件加载后 创建1-16的乱序数组\n//         let i = -1;\n//         let aniTimeout = () => {\n//             i++;\n//             if (i >= order.length) return;\n//             newDom[order[i]].active = true;\n//             setDomList(newDom)\n//             console.log(newDom)\n//         }\n//         // eslint-disable-next-line react-hooks/exhaustive-deps\n//         interval1 = setInterval(aniTimeout, 7)\n//         return () => {\n//             clearInterval(interval1)\n//         }\n//     }, [])\n\n\n//     const classNames = {\n//         animate: `animate-${type}`, //type决定进入还是离场的样式\n//         active: `active-${type}`\n//     }\n\n\n//     return (\n//         <div className={classNames.animate}>\n//             {domList.map((i, k) => <span key={k} className={i.active ? classNames.active : ''}/>)}\n//         </div>\n//     )\n// }\n\n// export default SwitchTransition\n\n\nexport default class SwitchTransition extends Component {\n    constructor() {\n        super();\n        this.boxnum = 16;\n        let list = []\n        for (let i = 0; i < this.boxnum; i++) {\n            list.push({active: false})\n        }\n        this.state = {\n            active: true,\n            dom: list // 16个距形\n        }\n    }\n\n    shuffle(n) {\n        //生成m张牌\n        let arr = new Array(n);\n        for (var i = 0; i < n; i++) {\n            arr[i] = i;\n        }\n        //每次抽出一张牌，放在另一堆。因为要在数组里抽出元素，把后面的所有元素向前拉一位，所以很耗时。\n        var newArr = []\n        for (let i = n; i > 0; i--) {\n            var length = Math.floor(Math.random() * i);\n            newArr.push(arr[length]);\n            arr.splice(length, 1);\n        }\n        console.log(newArr)\n        return newArr;\n    }\n\n    componentDidMount() {\n        let order = this.shuffle(16) //组件加载后 创建1-16的乱序数组\n        let newDom = this.state.dom;\n        let i = -1;\n        let aniTimeout = () => {\n            i++;\n            if (i >= order.length) return;\n            newDom[order[i]].active = true;\n            this.setState({\n                dom: newDom\n            })\n        }\n        this.setAnimate = setInterval(aniTimeout, 16)\n        console.log(this.props)\n        this.setCallback = setTimeout(() => {\n            this.props.animateEnd && this.props.animateEnd(false)\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.setAnimate)\n        clearTimeout(this.setCallback)\n    }\n\n\n    render() {\n        const classNames = {\n            animate: `animate-${this.props.type}`, //type决定进入还是离场的样式\n            active: `active-${this.props.type}`\n        }\n        return (\n            <div className={classNames.animate}>\n                {this.state.dom.map((i, k) => <span key={k} className={i.active ? classNames.active : ''}/>)}\n            </div>\n        )\n    }\n}\n\n","const Header = () => {\n    return (\n        <div className='header'>Summer个人博客</div>\n    )\n}\n\nexport default Header\n","import { useState, useEffect } from 'react'\nimport { Button } from 'antd-mobile'\nconst HomeTitle = () => {\n    const [animate1, setAnimate1] = useState(false)\n    const [animate2, setAnimate2] = useState(false)\n    const [animate3, setAnimate3] = useState(false)\n    const [cursor, setCursor] = useState(false)\n    var setTimeout0, setTimeout1, setTimeout2, setTimeout3\n    useEffect(() => {\n        setTimeout0 = setTimeout(() => {\n            setAnimate1(true)\n        }, 1200)\n        setTimeout1 = setTimeout(() => {\n            setAnimate2(true)\n        }, 1400)\n        setTimeout2 = setTimeout(() => {\n            setAnimate3(true)\n        }, 1600)\n        setTimeout3 = setTimeout(() => {\n            setCursor(true)\n        }, 2400)\n        return () => {\n            clearTimeout(setTimeout0)\n            clearTimeout(setTimeout1)\n            clearTimeout(setTimeout2)\n            clearTimeout(setTimeout3)\n        }\n    }, [])\n    return (\n        <div className='homeContentStyle text'>\n            <div className={animate1 ? 'animate' : ''}>Hey!</div>\n            <div className={animate2 ? 'animate' : ''}>Welcome!</div>\n            <div className={animate3 ? 'animate' : ''} style={{ fontSize: '39px' }}>I'm Summer #<i className={cursor ? 'cursor' : ''}></i></div>\n        </div>\n    )\n}\n\nexport default HomeTitle\n","import WorkImage from '../../../icons/images/work.png'\n\nconst HomeContent = () => {\n\n    const clickArticle = () => {\n        alert('点击了文章')\n    }\n\n    return (\n        <>\n            {/* <div className='flex-col navBox'>\n                <div onClick={()=>clickArticle()}>\n                    <img src={WorkImage} className='WorkImage' alt=''/>\n                    <div className='WorkTitle'>文章</div>\n                </div>\n            </div> */}\n        </>\n    )\n}\n\nexport default HomeContent\n","const ArticleList = () => {\n    return (\n        <>\n            <div style={{color:'#fff'}}>这里是文章列表</div>\n        </>\n    )\n}\n\nexport default ArticleList","import './home.scss'\nimport SwitchTransition from \"../../commponents/SwitchTransition\";\nimport Header from \"./components/Header\";\nimport HomeTitle from \"./components/HomeTitle\";\nimport HomeContent from \"./components/HomeContent\";\nimport ArticleList from \"./components/ArticleList\";\nimport { useState } from \"react\";\nimport { Swiper } from 'antd-mobile'\n\n\nconst Home = () => {\n    const [switchShow, setSwitchShow] = useState(true)\n    const animateEnd = (e) => {\n        setSwitchShow(false)\n    }\n    return (\n        <div className='main'>\n            <Header />\n            <Swiper style={{ height: '100%' }} defaultIndex={1}>\n                <Swiper.Item>\n                    简历\n                </Swiper.Item>\n                <Swiper.Item>\n                    <HomeTitle />\n                    <HomeContent />\n                </Swiper.Item>\n                <Swiper.Item>\n                    <ArticleList />\n                </Swiper.Item>\n            </Swiper>\n            {switchShow && <SwitchTransition type='enter' animateEnd={(e) => animateEnd(e)} />}\n        </div>\n    )\n}\n\nexport default Home\n","import './App.css';\nimport './style/init.scss'\nimport './style/index.scss'\nimport Home from './pages/Home'\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}